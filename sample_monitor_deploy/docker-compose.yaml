x-common:
  &common
    networks:
      - sample_deploy
    restart: always


services:

  prometheus:
    <<: *common
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./prom/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-remote-write-receiver'
      - '--web.enable-lifecycle'
    expose:
      - ${PROMETHEUS_PORT}
    ports:
      - ${PROMETHEUS_PORT}:${PROMETHEUS_PORT}


  grafana:
    <<: *common
    image: grafana/grafana-enterprise:latest
    ports:
      - ${GRAFANA_PORT}:${GRAFANA_PORT}
    user: '472'
    volumes:
      - ./grafana/grafana_config:/var/lib/grafana
      - ./grafana/grafana_provision:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - ${GRAFANA_PORT}
    depends_on:
      - prometheus

  collector:
    <<: *common
    image: dvdolgy/docker-collector:latest
    environment:
      - DOCKER_API_VERSION=1.41
    volumes:
      - ./collector_cfg/config.yaml:/app/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    




volumes:
  prometheus_data:

networks:
  sample_deploy:
